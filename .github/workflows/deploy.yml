name: Deploy to Cloudflare Pages
on:
  push:
    branches:
      - main
      - 'feature/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Install and Build üîß
        run: |
          npm ci
          npm run pages:build

      - name: Deploy üöÄ
        uses: cloudflare/wrangler-action@v3
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .vercel/output/static --project-name=portfolio
          # Optional: Enable this if you want to have GitHub Deployments triggered
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}

# permissions:
#   contents: write

# jobs:
#   deploy:
#     concurrency: ci-${{ github.ref }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout üõéÔ∏è
#         uses: actions/checkout@v4

#       - name: Setup Node.js üîê
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20.18.0'

#       - name: Install üîß
#         run: npm ci

#       - name: Build and Deploy to Pages üöÄ
#         env:
#           CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#           CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
#           CLOUDFLARE_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
#         run: npm run
#         # run: |
#         #   npx wrangler pages deploy .vercel/output/static \
#         #     --project-name $CLOUDFLARE_PROJECT_NAME \
#         #     --branch $GITHUB_REF_NAME

#       # - name: Deploy üöÄ
#       #   uses: cloudflare/wrangler-action@v3
#       #   with:
#       #     apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#       #     command: wrangler pages deploy
#       #     wranglerVersion: "3.81.0"
          
#       # - name: print deployment-url
#       #   env:
#       #     DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
#       #   run: echo $DEPLOYMENT_URL